# Generated by Django 5.1.5 on 2025-10-04 11:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ContactCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "verbose_name_plural": "Contact Categories",
                "ordering": ["name"],
                "indexes": [
                    models.Index(
                        fields=["name", "is_active"], name="api_contact_name_0a8a78_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ContactInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contact_type",
                    models.CharField(
                        choices=[
                            ("office", "Office"),
                            ("emergency", "Emergency"),
                            ("media", "Media"),
                            ("general", "General"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(db_index=True, max_length=100)),
                ("address", models.TextField(blank=True, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "office_hours",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("order", models.PositiveIntegerField(db_index=True, default=0)),
            ],
            options={
                "ordering": ["order", "contact_type"],
                "indexes": [
                    models.Index(
                        fields=["order", "contact_type"],
                        name="api_contact_order_743166_idx",
                    ),
                    models.Index(
                        fields=["is_active", "contact_type"],
                        name="api_contact_is_acti_ddd678_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="EventCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "verbose_name_plural": "Event Categories",
                "ordering": ["name"],
                "indexes": [
                    models.Index(
                        fields=["name", "is_active"], name="api_eventca_name_f3678e_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="GeneralRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("team", "Team"),
                            ("player", "Player"),
                            ("batting", "Batting"),
                            ("bowling", "Bowling"),
                            ("all-rounder", "All-rounder"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(db_index=True, max_length=200)),
                ("rank", models.PositiveIntegerField(db_index=True)),
                ("points", models.PositiveIntegerField(default=0)),
                ("rating", models.PositiveIntegerField(default=0)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="rankings/"),
                ),
                ("is_published", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "ordering": ["category", "rank"],
                "indexes": [
                    models.Index(
                        fields=["category", "rank"],
                        name="api_general_categor_81f4de_idx",
                    ),
                    models.Index(
                        fields=["is_published", "category"],
                        name="api_general_is_publ_3613b8_idx",
                    ),
                ],
                "unique_together": {("category", "rank")},
            },
        ),
        migrations.CreateModel(
            name="MediaCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "verbose_name_plural": "Media Categories",
                "ordering": ["name"],
                "indexes": [
                    models.Index(
                        fields=["name", "is_active"], name="api_mediaca_name_bb1ae2_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Media",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(db_index=True, max_length=200)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("photo", "Photo"),
                            ("video", "Video"),
                            ("gallery", "Gallery"),
                            ("document", "Document"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("matches", "Matches"),
                            ("events", "Events"),
                            ("training", "Training"),
                            ("awards", "Awards"),
                            ("behind_scenes", "Behind the Scenes"),
                            ("interviews", "Interviews"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="media/files/"),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="media/images/"),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="media/thumbnails/"
                    ),
                ),
                ("url", models.URLField(blank=True, null=True)),
                ("youtube_url", models.URLField(blank=True, null=True)),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                (
                    "duration",
                    models.DurationField(
                        blank=True, help_text="For video/audio files", null=True
                    ),
                ),
                ("views", models.PositiveIntegerField(db_index=True, default=0)),
                ("is_featured", models.BooleanField(db_index=True, default=False)),
                ("is_published", models.BooleanField(db_index=True, default=True)),
                (
                    "published_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "media_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.mediacategory",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Media",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MediaGallery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "cover_image",
                    models.ImageField(blank=True, null=True, upload_to="galleries/"),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=True)),
                ("order", models.PositiveIntegerField(default=0)),
                ("media_items", models.ManyToManyField(blank=True, to="api.media")),
            ],
            options={
                "verbose_name_plural": "Media Galleries",
                "ordering": ["order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NewsCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "verbose_name_plural": "News Categories",
                "ordering": ["name"],
                "indexes": [
                    models.Index(
                        fields=["name", "is_active"], name="api_newscat_name_c30b14_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(db_index=True, max_length=200)),
                ("slug", models.SlugField(unique=True)),
                ("excerpt", models.TextField(max_length=500)),
                ("content", models.TextField()),
                ("image", models.ImageField(blank=True, null=True, upload_to="news/")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        db_index=True,
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("is_featured", models.BooleanField(db_index=True, default=False)),
                ("views", models.PositiveIntegerField(db_index=True, default=0)),
                (
                    "published_at",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.newscategory",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "News",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("slug", models.SlugField(unique=True)),
                (
                    "jersey_number",
                    models.PositiveIntegerField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("batsman", "Batsman"),
                            ("bowler", "Bowler"),
                            ("all-rounder", "All-rounder"),
                            ("wicket-keeper", "Wicket-keeper"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("position", models.CharField(blank=True, max_length=100, null=True)),
                ("age", models.PositiveIntegerField(db_index=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="players/"),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "matches_played",
                    models.PositiveIntegerField(db_index=True, default=0),
                ),
                ("runs_scored", models.PositiveIntegerField(db_index=True, default=0)),
                (
                    "wickets_taken",
                    models.PositiveIntegerField(db_index=True, default=0),
                ),
                (
                    "batting_average",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "bowling_average",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "strike_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("debut_date", models.DateField(blank=True, null=True)),
                ("join_date", models.DateField(db_index=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("injured", "Injured"),
                            ("retired", "Retired"),
                            ("suspended", "Suspended"),
                        ],
                        db_index=True,
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_captain", models.BooleanField(db_index=True, default=False)),
                ("is_vice_captain", models.BooleanField(db_index=True, default=False)),
                ("is_featured", models.BooleanField(db_index=True, default=False)),
            ],
            options={
                "ordering": ["jersey_number", "name"],
                "indexes": [
                    models.Index(
                        fields=["jersey_number", "name"],
                        name="api_player_jersey__f50120_idx",
                    ),
                    models.Index(
                        fields=["role", "status"], name="api_player_role_e55c20_idx"
                    ),
                    models.Index(
                        fields=["is_featured", "status"],
                        name="api_player_is_feat_24913c_idx",
                    ),
                    models.Index(
                        fields=["is_captain", "is_vice_captain"],
                        name="api_player_is_capt_fe64e1_idx",
                    ),
                    models.Index(
                        fields=["-matches_played"], name="api_player_matches_11bb39_idx"
                    ),
                    models.Index(
                        fields=["-runs_scored"], name="api_player_runs_sc_0c0d92_idx"
                    ),
                    models.Index(
                        fields=["-wickets_taken"], name="api_player_wickets_20a786_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PlayerRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("player_name", models.CharField(db_index=True, max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("batting", "Batting"),
                            ("bowling", "Bowling"),
                            ("all-rounder", "All-rounder"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[("t20i", "T20I"), ("odi", "ODI"), ("test", "Test")],
                        db_index=True,
                        max_length=10,
                    ),
                ),
                ("rank", models.PositiveIntegerField(db_index=True)),
                ("rating", models.PositiveIntegerField()),
                ("points", models.PositiveIntegerField(blank=True, null=True)),
                ("wickets", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "country",
                    models.CharField(
                        db_index=True, default="Afghanistan", max_length=100
                    ),
                ),
                ("is_published", models.BooleanField(db_index=True, default=True)),
                (
                    "player",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.player",
                    ),
                ),
            ],
            options={
                "ordering": ["category", "format", "rank"],
            },
        ),
        migrations.CreateModel(
            name="RankingCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "verbose_name_plural": "Ranking Categories",
                "ordering": ["name"],
                "indexes": [
                    models.Index(
                        fields=["name", "is_active"], name="api_ranking_name_973450_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="TeamRanking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("team_name", models.CharField(db_index=True, max_length=100)),
                (
                    "format",
                    models.CharField(
                        choices=[("t20i", "T20I"), ("odi", "ODI"), ("test", "Test")],
                        db_index=True,
                        max_length=10,
                    ),
                ),
                ("rank", models.PositiveIntegerField(db_index=True)),
                ("rating", models.PositiveIntegerField()),
                ("points", models.PositiveIntegerField()),
                ("matches_played", models.PositiveIntegerField(default=0)),
                (
                    "country_code",
                    models.CharField(db_index=True, default="AFG", max_length=3),
                ),
                ("is_published", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "ordering": ["format", "rank"],
                "indexes": [
                    models.Index(
                        fields=["format", "rank"], name="api_teamran_format_648746_idx"
                    ),
                    models.Index(
                        fields=["is_published", "format"],
                        name="api_teamran_is_publ_016bfa_idx",
                    ),
                    models.Index(
                        fields=["country_code", "format"],
                        name="api_teamran_country_b41c84_idx",
                    ),
                ],
                "unique_together": {("format", "rank")},
            },
        ),
        migrations.CreateModel(
            name="TeamRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(
                        fields=["name", "is_active"], name="api_teamrol_name_5d2ac0_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="TeamMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("position", models.CharField(db_index=True, max_length=100)),
                (
                    "member_type",
                    models.CharField(
                        choices=[
                            ("management", "Management"),
                            ("coaches", "Coaches"),
                            ("staff", "Staff"),
                            ("players", "Players"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("bio", models.TextField(blank=True, null=True)),
                ("photo", models.ImageField(blank=True, null=True, upload_to="team/")),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("join_date", models.DateField(db_index=True)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("order", models.PositiveIntegerField(db_index=True, default=0)),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.teamrole",
                    ),
                ),
            ],
            options={
                "ordering": ["member_type", "order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=200)),
                ("city", models.CharField(db_index=True, max_length=100)),
                (
                    "country",
                    models.CharField(
                        db_index=True, default="Afghanistan", max_length=100
                    ),
                ),
                (
                    "capacity",
                    models.PositiveIntegerField(blank=True, db_index=True, null=True),
                ),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="venues/"),
                ),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="api_venue_name_7913fc_idx"),
                    models.Index(
                        fields=["city", "country"], name="api_venue_city_c6a1eb_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(db_index=True, max_length=200)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField()),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("international", "International"),
                            ("domestic", "Domestic"),
                            ("training", "Training"),
                            ("tournament", "Tournament"),
                            ("friendly", "Friendly"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("date", models.DateTimeField(db_index=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("upcoming", "Upcoming"),
                            ("ongoing", "Ongoing"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        db_index=True,
                        default="upcoming",
                        max_length=20,
                    ),
                ),
                (
                    "ticket_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("is_free", models.BooleanField(db_index=True, default=False)),
                ("max_capacity", models.PositiveIntegerField(blank=True, null=True)),
                ("registered_count", models.PositiveIntegerField(default=0)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="events/"),
                ),
                ("is_featured", models.BooleanField(db_index=True, default=False)),
                ("is_published", models.BooleanField(db_index=True, default=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.eventcategory",
                    ),
                ),
                (
                    "venue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.venue"
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("email", models.EmailField(db_index=True, max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("subject", models.CharField(db_index=True, max_length=200)),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("read", "Read"),
                            ("replied", "Replied"),
                            ("closed", "Closed"),
                        ],
                        db_index=True,
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        db_index=True,
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("admin_notes", models.TextField(blank=True, null=True)),
                ("replied_at", models.DateTimeField(blank=True, null=True)),
                ("reply_message", models.TextField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.contactcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["-created_at"], name="api_contact_created_b984ff_idx"
                    ),
                    models.Index(
                        fields=["status", "priority"],
                        name="api_contact_status_90ad82_idx",
                    ),
                    models.Index(
                        fields=["category", "status"],
                        name="api_contact_categor_d7dc17_idx",
                    ),
                    models.Index(
                        fields=["email", "status"], name="api_contact_email_391e68_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="media",
            index=models.Index(
                fields=["-created_at"], name="api_media_created_14453c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="media",
            index=models.Index(
                fields=["media_type", "is_published"],
                name="api_media_media_t_9b7a0b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="media",
            index=models.Index(
                fields=["category", "is_published"], name="api_media_categor_a1308b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="media",
            index=models.Index(
                fields=["is_featured", "is_published"],
                name="api_media_is_feat_bb7575_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="media",
            index=models.Index(fields=["-views"], name="api_media_views_26edda_idx"),
        ),
        migrations.AddIndex(
            model_name="media",
            index=models.Index(
                fields=["-published_at"], name="api_media_publish_0755da_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["-created_at"], name="api_news_created_4b7959_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["status", "-published_at"], name="api_news_status_6ecf1d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["is_featured", "status"], name="api_news_is_feat_a632fa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["category", "status"], name="api_news_categor_3f8e1b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(
                fields=["author", "status"], name="api_news_author__6319e0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="news",
            index=models.Index(fields=["-views"], name="api_news_views_d1ef71_idx"),
        ),
        migrations.AddIndex(
            model_name="playerranking",
            index=models.Index(
                fields=["category", "format", "rank"],
                name="api_playerr_categor_36d934_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="playerranking",
            index=models.Index(
                fields=["is_published", "category", "format"],
                name="api_playerr_is_publ_2dc4b8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="playerranking",
            index=models.Index(
                fields=["player", "category"], name="api_playerr_player__0b4cb0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="playerranking",
            index=models.Index(
                fields=["country", "category"], name="api_playerr_country_baa5f4_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="playerranking",
            unique_together={("category", "format", "rank")},
        ),
        migrations.AddIndex(
            model_name="teammember",
            index=models.Index(
                fields=["member_type", "order", "name"],
                name="api_teammem_member__9f81a6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="teammember",
            index=models.Index(
                fields=["is_active", "member_type"],
                name="api_teammem_is_acti_453f79_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["-date"], name="api_event_date_9ec950_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["status", "date"], name="api_event_status_2fefd8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["is_featured", "is_published"],
                name="api_event_is_feat_92103e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["event_type", "status"], name="api_event_event_t_f1d2ba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["category", "status"], name="api_event_categor_085c59_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["venue", "date"], name="api_event_venue_i_8e24a0_idx"
            ),
        ),
    ]
